@model DM.App.Library.Models.Investigations
@using DM.App.Library.Core
@{
    int counter = 0;
    int cells = 2;
    int groupId = 0;
}

<div class="page-content">
    <div class="form-container" data-text="" style="padding: 5px;">
        @*<fieldset>
            <legend>Request</legend>*@
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-2 pull-right">
                @*<div class="panel panel-default">
            <div class="panel-heading">
                <i class="fa fa-bell fa-fw"></i> Notifications Panel
            </div>*@
                <!-- /.panel-heading -->
                <div class="panel-body" style="padding: 0px;">

                    <div class="no-print">

                        <a href="#" id="print" style="display:none;" class="custom-condensed btn btn-primary custom-margin-bottom col-sm-4 col-md-2 col-lg-12" role="button">
                            <span class="fa-stack">
                                <i class="fa fa-link fa-stack-1x"></i>
                                <i class="fa fa-square-o fa-stack-2x"></i>
                            </span> Εκτύπωση
                        </a>

                        @*<a href="#" onclick="javascript: getIncidentDetails();" class="custom-condensed btn btn-primary custom-margin-bottom col-sm-4 col-md-2 col-lg-12" role="button">
                            <span class="fa-stack">
                                <i class="fa fa-link fa-stack-1x"></i>
                                <i class="fa fa-square-o fa-stack-2x"></i>
                            </span> Στοιχεία Συμβάντος
                        </a>*@

                        @*<a href="@Request.Url.ToString().Replace("Tasks/Edit/" + Model.Task_Id.ToString(), "Requests/WorkflowDiagram/" + "")" target="_blank" class="custom-condensed btn btn-success custom-margin-bottom col-sm-4 col-md-2 col-lg-12" role="button">
                            <span class="fa-stack">
                                <i class="fa fa-sitemap fa-stack-1x"></i>
                                <i class="fa fa-square-o fa-stack-2x"></i>
                            </span> Flow Diagram
                        </a>*@
                    </div>
                    <!-- /.list-group -->
                </div>
                <!-- /.panel-body -->
                @*</div>*@
                <!-- /.panel -->
            </div>
            <div class="clearfix visible-sm-block visible-md-block "></div>

            <div class="col-sm-12 col-md-12 col-lg-10 pull-left">
                @foreach (var field in Model.FieldsConfiguration)
                {
                    int overrideCells = cells;
                    int fieldState = HtmlTagsHelper.MapFieldStateToFormState(Model.FormState, field.FieldStateInNewForm, field.FieldStateInEditForm, field.FieldStateInViewForm, -1);

                    if (fieldState == (int)Enums.FieldStates.Unavailable)
                    {
                        continue;
                    }
                    string fieldControl = HtmlTagsHelper.MapFieldControlToFormState(Model.FormState, field.ControlTypeInNewForm, field.ControlTypeInEditForm, field.ControlTypeInViewForm, null);
                    bool isVisible = (fieldState != (int)Enums.FieldStates.Hidden && fieldState != (int)Enums.FieldStates.Unavailable);

                    if (isVisible)
                    {
                        bool showInFullRow = HtmlTagsHelper.ShowFieldInFullRow(field);
                        if (showInFullRow && counter % cells != 0)
                        {
                            counter++;
                        }
                        // Show field in next row
                        if (counter % cells == 0)
                        {
                            // Show field in full row
                            if (showInFullRow)
                            {
                                overrideCells = 1;
                                counter++;
                            }
                            if (groupId > 0 && field.LayoutGroupId != groupId)
                            {
                                @Html.Raw("<!-- Group end -->" + Environment.NewLine + "</div></div>" + Environment.NewLine);
                                groupId = 0;
                            }

                            @Html.Raw("<!-- Row start -->" + Environment.NewLine + "<div class=\"clearfix visible-sm-block visible-md-block visible-lg-block\"></div>" + Environment.NewLine);

                            if (field.LayoutGroupId > 0 && field.LayoutGroupId != groupId)
                            {
                                @Html.Raw("<!-- Group start -->" + Environment.NewLine + "<div id=\"divGroup" + field.LayoutGroupId.ToString() + "\" class=\"panel panel-default\" style=\"margin-left: 15px; margin-right: 15px;\"><div class=\"panel-heading\"><h3 class=\"panel-title\">" + (!string.IsNullOrEmpty(field.NameLocale9) ? field.NameLocale9 : field.LayoutGroupId.ToString()) + "</h3></div><div class=\"panel-body\">" + Environment.NewLine);
                                groupId = field.LayoutGroupId;
                            }
                        }
                    }

                    if (!isVisible) //(fieldState == (int)Enums.FieldStates.Hidden)
                    {
                        // Do nothing here
                    }
                    else
                    {
                        @Html.Raw("<!-- CreateControlForField S -->" + Environment.NewLine)
                        @Html.Raw(HtmlTagsHelper.CreateOpenDivCell(overrideCells) + Environment.NewLine)
                        @HtmlTagsHelper.CreateControlForField(Html, field.InternalName, null, field.GetTitle(), fieldControl, (Enums.FieldStates)fieldState, Model.FormState, field);
                        @Html.Raw(HtmlTagsHelper.CreateCloseDiv() + "<!-- CreateControlForField E -->" + Environment.NewLine)
                        counter++;

                        // Show field in row and add empty cell
                        if (HtmlTagsHelper.ShowFieldInRowWithEmptyCell(field))
                        {
                            @Html.Raw("<!-- ShowFieldInRowWithEmptyCell S -->" + Environment.NewLine)
                            @Html.Raw(HtmlTagsHelper.CreateOpenDivCell(cells))
                            @Html.Raw(HtmlTagsHelper.CreateCloseDiv() + Environment.NewLine)
                            @Html.Raw("<!-- ShowFieldInRowWithEmptyCell E -->" + Environment.NewLine)
                            counter++;
                        }
                    }
                    if (counter % cells == 0)
                    {
                        if (isVisible)
                        {
                            // Do nothing
                        }
                    }
                }
                @if (groupId > 0)
                {
                    @Html.Raw("<!-- Group end -->" + Environment.NewLine + "</div></div>" + Environment.NewLine);
                }

                @foreach (var field in Model.FieldsConfiguration)
                {
                    int fieldState = HtmlTagsHelper.MapFieldStateToFormState(Model.FormState, field.FieldStateInNewForm, field.FieldStateInEditForm, field.FieldStateInViewForm, -1);
                    if (fieldState == (int)Enums.FieldStates.Hidden)
                    {
                        @Html.Hidden(field.InternalName)
                        @Html.Raw(Environment.NewLine)
                    }
                }
            </div> <!-- row task -->
            <!-- Action Buttons -->
            <div class="clearfix visible-xs-block visible-sm-block visible-md-block visible-lg-block "></div>
            <div class="col-xs-12 col-sm-12 col-md-12">
                <p></p>
                <div class="form-group">
                    <input name="btnSubmit" id="btnSubmit" type="submit" value="Αποθήκευση" class="btn btn-primary no-print" />
                    <input name="btnCancel" id="btnCancel" type="submit" value="Κλείσιμο φόρμας" class="btn no-print" />
                </div>
            </div>
        </div> <!-- row task -->
        @*</fieldset>*@
    </div> <!-- form-container task -->

</div> <!-- page-content task -->

<script type="text/javascript">

    @*function getIncidentDetails() {

        var viewContents = $('#divIncident').text().trim();

        var dialog = $('#dialogIncident');
        if (dialog != undefined)
            dialog.modal('show');
        //if (viewContents == '') {
            //if (app != undefined && app != null)
            //    app.Notify("", false);
            var url = '@Url.Action("DetailsPartialView", "IncidentsGen", new { id = @Model.Incident_Id }, Request.Url.Scheme)' + '?' + '@Request.QueryString';
            $('#divIncident').load(url, function (response, status, xhr) {
                //if (app != undefined && app != null)
                //    app.ClearNotifications();
            });
        //}
    }*@

    function compareDates(date1, date2) {
        if ($(date1).val() != null && $(date2).val() != null) {
            var d1;
            var d2;

            var arr1 = $(date1).val().split("/");
            if (arr1.length == 3) {
                d1 = new Date(arr1[2], arr1[1] - 1, arr1[0]);
            }
            var arr2 = $(date2).val().split("/");
            if (arr2.length == 3) {
                d2 = new Date(arr2[2], arr2[1] - 1, arr2[0]);
            }
            if (d1 > d2)
                return 1;
            else if (d1 < d2)
                return -1;
            else
                return 0;
        }
        return 0;
    }

</script>