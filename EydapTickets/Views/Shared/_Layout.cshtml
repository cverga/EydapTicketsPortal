@using DM.App.Library.Core
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>@ViewBag.PageTitle - Tickets Application</title>
        <link href="@Url.Content("~/favicon.ico")" rel="shortcut icon" type="image/x-icon" />

        @{ Html.RenderPartial("_ApplicationInsightsScript"); }

        @*@Styles.Render("~/Content/css")*@
        @Scripts.Render("~/Bundles/modernizr")
        @Scripts.Render("~/Bundles/jquery")
        @*@Scripts.Render("~/Bundles/other")*@
        @Scripts.Render("~/Bundles/app")
        @*<script src="~/Scripts/app.js" type="text/javascript"></script>*@

        @RenderSection("ScriptsBeforeLib", required: false)

        <script src="~/Scripts/TicketingScripts.js"></script>
        @{
            if (UILibSelector.GetUILibrary(Request).Library == UILibSelector.UILibs.Bootstrap)
            {
                if ("Classic".Equals(UILibSelector.GetUILibrary(Request).LibraryTheme, StringComparison.InvariantCultureIgnoreCase))
                {
                    @Styles.Render("~/Content/csslib2")
                }
                else
                {
                    @Styles.Render("~/Content/csslib2-" + UILibSelector.GetUILibrary(Request).LibraryTheme)
                }
                @Scripts.Render("~/Bundles/jslib2")
            }
            else
            {
                @Styles.Render("~/Content/csslib1")
                @Scripts.Render("~/Bundles/jslib1")
            }
        }
        @RenderSection("ScriptsAfterLib", required: false)

        <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
        <!--[if lt IE 9]>
        @Scripts.Render("~/Bundles/jslegacy")
        <![endif]-->

        <script type="text/javascript">
            function loadCss(file) {
                if (document.createStyleSheet) {
                    document.createStyleSheet(file);
                } else {
                    $("head").append($("<link rel='stylesheet' href='" + file + "' type='text/css' />"));
                }
            }

            @Html.Raw("var _libUi = '" + UILibSelector.GetUILibrary(Request).Library.ToString() + "';")
            @Html.Raw("var _libUiCss = '" + UILibSelector.GetUILibrary(Request).LibraryCss.ToString() + "';")
            @Html.Raw("var _extendSelect2 = '" + Configuration.Settings.EnableSelect2Value() + "';")
            @Html.Raw("var _extendCkeditor = '" + Configuration.Settings.EnableCkeditorValue() + "';")

        </script>
    </head>
    <body class="scroll-y defaultFont">

        <div class="layout-content">
            @if (UILibSelector.GetUILibrary(Request).Library == UILibSelector.UILibs.Bootstrap)
            {
                @Html.Partial("~/Views/Shared/_PartialLayoutBtSp.cshtml")
            }
            else
            {
                @Html.Partial("~/Views/Shared/_PartialLayout.cshtml")
            }
            <div class="layout-view">
                @RenderBody()
            </div>
        </div>

        <script type="text/javascript">
            var initComplete = false;
            var app = new App();
            app.LibUI = _libUi;
            app.UseSP = false;
            window.spHostUrl = app.GetRequestParam("SPHostUrl");
            window.spAppWebUrl = app.GetRequestParam("SPAppWebUrl");

            if (window.spAppWebUrl == null || window.spAppWebUrl == "") {
                window.spAppWebUrl = "@HttpUtility.UrlDecode(Configuration.Settings.DefaultSPAppWebUrl())";
            }

            $.ajaxSetup({
                cache: true
            });
            $(document).ready(function () {

                if (_extendSelect2 == '1') {
                    if (_libUi == 'Metro') {
                    }
                    else {
                        $("[data-role='select']").select2();
                    }
                }
                if (_libUi == 'Bootstrap') {
                    $(".switch").bootstrapSwitch();
                    $(".date").datepicker({ autoclose: true });
                    $(".timepicker").wickedpicker({ twentyFour: true });

                    //hook time picker clean
                    $(".time_clear").click(function (event) {
                        try {
                            var lCntrId = $(this).attr('cntr_to_clear');
                            var lCntr = $('#' + lCntrId);
                            lCntr.val("");
                            //alert(lCntr.wickedpicker('time'));
                        }
                        catch (e) {
                            alert(e);
                        }
                    });
                }
                if (_extendCkeditor == '1') {
                    window.CKEDITOR_BASEPATH = '@Url.Content("~/Content/ckeditor/")';
                    CKEDITOR.basePath = '@Url.Content("~/Content/ckeditor/")';
                }

                if (app != undefined)
                    app.CallManager.CallFunctions();

                //respond.update();
            });

            $(window).resize(function () {
                //if (app != undefined && app != null)
                //    app.Log("page", "Resizing ...", app.LOG_DEBUG);
                if (initComplete) {
                    $("[data-role='select']").width('100%');
                    $("[data-role='select']").select2();
                }
                initComplete = true;
            });

            $("#btnGlobalSearch").click(function () {
                var text = $("#txtGlobalSearch").val();
                if (text.length > 0)
                    document.location.href = "/Requests?search=" + text + "&@Request.QueryString";
            });
            $("#txtGlobalSearch").keyup(this, function (e) {
                if (e.which != 13)
                    return;
                var text = $("#txtGlobalSearch").val();
                if (text.length > 0)
                    document.location.href = "/Requests?search=" + text + "&@Request.QueryString";
            });

        </script>

        @RenderSection("scripts", required: false)

        @Styles.Render("~/Content/css-overrides")

        @{
            if (UILibSelector.GetUILibrary(Request).Library == UILibSelector.UILibs.Bootstrap)
            {
                var pathTheme = string.Format("/Content/overrides-{0}-{1}.css", UILibSelector.GetUILibrary(Request).Library.ToString(), UILibSelector.GetUILibrary(Request).LibraryTheme.ToString());

                if (File.Exists(Request.MapPath("~" + pathTheme)))
                {
                    <link href="@pathTheme" rel="stylesheet" />
                }
            }
        }

        <p style="margin-bottom: 10px;">
        </p>
    </body>
</html>