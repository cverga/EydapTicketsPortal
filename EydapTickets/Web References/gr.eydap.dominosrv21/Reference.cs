//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EydapTickets.gr.eydap.dominosrv21 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DominoSoapBinding", Namespace="urn:TTInitiation")]
    public partial class TTCreationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CREATETTOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TTCreationService() {
            this.Url = global::EydapTickets.Properties.Settings.Default.EydapTicketsPortal_gr_eydap_dominosrv21_TTCreationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CREATETTCompletedEventHandler CREATETTCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:TTInitiation", ResponseNamespace="urn:TTInitiation")]
        [return: System.Xml.Serialization.SoapElementAttribute("CREATETTReturn")]
        public RESPONSE CREATETT(
                    string TTID1022, 
                    string CODE1022, 
                    string REGISTERNUMBER, 
                    string MANAGEMENTTYPE, 
                    string DHMOS, 
                    string ADDRESS, 
                    string ADDRESSNUMBER, 
                    string ZIPCODE, 
                    string BUILDINGNUMBER, 
                    string COUNTERNUMBER, 
                    string CREATORDISPLAY, 
                    string CRITICALNESS, 
                    string STATUS, 
                    string COMMENTS, 
                    string SOURCE, 
                    string TICKETTYPE, 
                    string TECHACTIONCODE, 
                    string YDPORTALCODE) {
            object[] results = this.Invoke("CREATETT", new object[] {
                        TTID1022,
                        CODE1022,
                        REGISTERNUMBER,
                        MANAGEMENTTYPE,
                        DHMOS,
                        ADDRESS,
                        ADDRESSNUMBER,
                        ZIPCODE,
                        BUILDINGNUMBER,
                        COUNTERNUMBER,
                        CREATORDISPLAY,
                        CRITICALNESS,
                        STATUS,
                        COMMENTS,
                        SOURCE,
                        TICKETTYPE,
                        TECHACTIONCODE,
                        YDPORTALCODE});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void CREATETTAsync(
                    string TTID1022, 
                    string CODE1022, 
                    string REGISTERNUMBER, 
                    string MANAGEMENTTYPE, 
                    string DHMOS, 
                    string ADDRESS, 
                    string ADDRESSNUMBER, 
                    string ZIPCODE, 
                    string BUILDINGNUMBER, 
                    string COUNTERNUMBER, 
                    string CREATORDISPLAY, 
                    string CRITICALNESS, 
                    string STATUS, 
                    string COMMENTS, 
                    string SOURCE, 
                    string TICKETTYPE, 
                    string TECHACTIONCODE, 
                    string YDPORTALCODE) {
            this.CREATETTAsync(TTID1022, CODE1022, REGISTERNUMBER, MANAGEMENTTYPE, DHMOS, ADDRESS, ADDRESSNUMBER, ZIPCODE, BUILDINGNUMBER, COUNTERNUMBER, CREATORDISPLAY, CRITICALNESS, STATUS, COMMENTS, SOURCE, TICKETTYPE, TECHACTIONCODE, YDPORTALCODE, null);
        }
        
        /// <remarks/>
        public void CREATETTAsync(
                    string TTID1022, 
                    string CODE1022, 
                    string REGISTERNUMBER, 
                    string MANAGEMENTTYPE, 
                    string DHMOS, 
                    string ADDRESS, 
                    string ADDRESSNUMBER, 
                    string ZIPCODE, 
                    string BUILDINGNUMBER, 
                    string COUNTERNUMBER, 
                    string CREATORDISPLAY, 
                    string CRITICALNESS, 
                    string STATUS, 
                    string COMMENTS, 
                    string SOURCE, 
                    string TICKETTYPE, 
                    string TECHACTIONCODE, 
                    string YDPORTALCODE, 
                    object userState) {
            if ((this.CREATETTOperationCompleted == null)) {
                this.CREATETTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCREATETTOperationCompleted);
            }
            this.InvokeAsync("CREATETT", new object[] {
                        TTID1022,
                        CODE1022,
                        REGISTERNUMBER,
                        MANAGEMENTTYPE,
                        DHMOS,
                        ADDRESS,
                        ADDRESSNUMBER,
                        ZIPCODE,
                        BUILDINGNUMBER,
                        COUNTERNUMBER,
                        CREATORDISPLAY,
                        CRITICALNESS,
                        STATUS,
                        COMMENTS,
                        SOURCE,
                        TICKETTYPE,
                        TECHACTIONCODE,
                        YDPORTALCODE}, this.CREATETTOperationCompleted, userState);
        }
        
        private void OnCREATETTOperationCompleted(object arg) {
            if ((this.CREATETTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CREATETTCompleted(this, new CREATETTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:TTInitiation")]
    public partial class RESPONSE {
        
        private bool sUCCESSField;
        
        private string rEASONField;
        
        private string eRRORTYPEField;
        
        private string eRRORCODEField;
        
        /// <remarks/>
        public bool SUCCESS {
            get {
                return this.sUCCESSField;
            }
            set {
                this.sUCCESSField = value;
            }
        }
        
        /// <remarks/>
        public string REASON {
            get {
                return this.rEASONField;
            }
            set {
                this.rEASONField = value;
            }
        }
        
        /// <remarks/>
        public string ERRORTYPE {
            get {
                return this.eRRORTYPEField;
            }
            set {
                this.eRRORTYPEField = value;
            }
        }
        
        /// <remarks/>
        public string ERRORCODE {
            get {
                return this.eRRORCODEField;
            }
            set {
                this.eRRORCODEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CREATETTCompletedEventHandler(object sender, CREATETTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CREATETTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CREATETTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591