@using EydapTickets.Areas.Reporting.Models

@model Report0700SearchModel

<script type="text/javascript">
    function Municipality_SelectedIndexChanged() {
        StreetName.PerformCallback();
    }
    function StreetName_BeginCallback(s, e) {
        e.customArgs["municipality"] = Municipality.GetValue();
    }
    function Contractor_BeginCallback(s, e) {
        e.customArgs["sectorId"] = '@Model.SectorId';
    }
</script>

@Html.DevExpress().FormLayout(settings =>
{

    settings.Name = "criteriaPanel";
    settings.AlignItemCaptions = true;
    settings.EncodeHtml = false;
    settings.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
    settings.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 720;
    settings.ShowItemCaptionColon = false;
    settings.UseDefaultPaddings = false;
    settings.Width = Unit.Percentage(100);

    settings.Items.AddGroupItem(g =>
    {
        g.Caption = "Κριτήρια Αναζήτησης";
        g.ColCount = 2;
        g.GroupBoxDecoration = GroupBoxDecoration.None;

        g.Items.Add(m => m.DateFrom, i =>
        {
            i.SetNestedContent(() =>
            {
                var content = Html.Action("DateFromPartial", "Filters", new { area = "", selectedValue = Model.DateFrom });
                ViewContext.Writer.Write(content);
            });
        });

        g.Items.Add(m => m.DateTo, i =>
        {
            i.SetNestedContent(() =>
            {
                var content = Html.Action("DateToPartial", "Filters", new { area = "", selectedValue = Model.DateTo });
                ViewContext.Writer.Write(content);
            });
        });

        g.Items.Add(m => m.TaskType, i =>
        {
            i.SetNestedContent(() =>
            {
                var content = Html.Action("TaskTypePartial", "Filters", new { area = "", selectedValue = Model.TaskType });
                ViewContext.Writer.Write(content);
            });
        });

        g.Items.Add(m => m.TaskState, i =>
        {
            i.SetNestedContent(() =>
            {
                var content = Html.Action("TaskStatePartial", "Filters", new { area = "", selectedValue = Model.TaskState });
                ViewContext.Writer.Write(content);
            });
        });

        g.Items.Add(m => m.Municipality, i =>
        {
            i.SetNestedContent(() =>
            {
                var content = Html.Action("MunicipalityPartial", "Filters", new { area = "", selectedValue = Model.Municipality });
                ViewContext.Writer.Write(content);
            });
        });

        g.Items.Add(m => m.StreetName, i =>
        {
            i.SetNestedContent(() =>
            {
                var content = Html.Action("StreetNamePartial", "Filters", new { area = "", municipality = Model.Municipality, selectedValue = Model.StreetName });
                ViewContext.Writer.Write(content);
            });
        });

        g.Items.Add(m => m.StreetNumber, i =>
        {
            i.SetNestedContent(() =>
            {
                var content = Html.Action("StreetNumberPartial", "Filters", new { area = "", selectedValue = Model.StreetNumber });
                ViewContext.Writer.Write(content);
            });
        });
    });

    settings.Items.Add(i =>
    {
        i.ShowCaption = DefaultBoolean.False;
        i.ParentContainerStyle.Paddings.PaddingTop = 5;
        i.ParentContainerStyle.Paddings.PaddingRight = 0;
        i.Width = 70;

        i.NestedExtension().Button(s =>
        {
            s.Name = "Search";
            s.Text = "Αναζήτηση";
            s.UseSubmitBehavior = true;
        });
    });

}).GetHtml()