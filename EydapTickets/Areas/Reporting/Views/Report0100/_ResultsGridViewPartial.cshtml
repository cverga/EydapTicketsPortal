@using EydapTickets.Areas.Reporting.Models
@using EydapTickets.Helpers

@model IEnumerable<Report0100Result>

@(Html.DevExpress().GridView<Report0100Result>(settings =>
{
    GridViewFeaturesHelper.SetupGlobalGridViewBehavior(settings);

    settings.Name = "Report100ResultsGridView";
    settings.SettingsText.Title = "Συγκεντρωτική Κατάσταση Αναθέσεων";

    settings.CallbackRouteValues = new
    {
        Controller = "Report0100",
        Action = "GridViewCallback",
        ViewBag.CriteriaModel.SectorId,
        ViewBag.CriteriaModel.DateFrom,
        ViewBag.CriteriaModel.DateTo,
        ViewBag.CriteriaModel.Municipality,
        ViewBag.CriteriaModel.StreetName,
        ViewBag.CriteriaModel.StreetNumber,
        ViewBag.CriteriaModel.TaskType,
        ViewBag.CriteriaModel.TaskState,
        ViewBag.CriteriaModel.Contractor
    };

    settings.KeyFieldName = "AssignmentId";

    settings.Settings.ShowTitlePanel = false;
    settings.SettingsPager.Visible = true;

    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowFilterRow = true;
    settings.SettingsBehavior.AllowSelectByRowClick = true;

    // 11.03.2018, Andreas Kasapleris
    settings.SettingsLoadingPanel.Mode = GridViewLoadingPanelMode.ShowAsPopup;
    settings.SettingsLoadingPanel.Text = "Παρακαλώ περιμένετε ... ";

    // Toolbar configuration
    settings.Toolbars.Add(tb =>
    {
        tb.EnableAdaptivity = true;
        tb.Items
            .AddTitle(settings.SettingsText.Title)
            .AddSpring()
            .AddRefreshAllCommand()
            .AddExportCommandGroup();
    });

    // 09.03.2018, Andreas Kasapleris, export settings
    settings.SettingsExport.EnableClientSideExportAPI = true;
    settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.DataAware;
    settings.SettingsExport.PaperKind = System.Drawing.Printing.PaperKind.A4;
    settings.SettingsExport.Landscape = true;

    // settings.SettingsExport.ReportHeader = "ΚΑΤΑΣΤΑΣΗ ΑΝΑΤΕΘΕΙΜΕΝΩΝ ΕΡΓΑΣΙΩΝ";
    // settings.SettingsExport.TopMargin    = 10;
    // settings.SettingsExport.BottomMargin = 10;

    string contractor = ViewBag.CriteriaModel.Contractor;
    if (string.IsNullOrEmpty(contractor))
    {
        settings.SettingsExport.FileName = "Report_0100_" + DateTime.Now.ToShortDateString();
        settings.SettingsExport.PageHeader.Center =
            string.Format("ΣΥΓΚΕΝΤΡΩΤΙΚΗ ΚΑΤΑΣΤΑΣΗ ΑΝΑΘΕΣΕΩΝ ΗΜΕΡ.ΑΠΟΣΤΟΛΗΣ: {0}",
                DateTime.Now.ToString());
    }
    else
    {
        settings.SettingsExport.FileName =
            string.Format("Report_0100_{0}_" + DateTime.Now.ToShortDateString(), contractor);
        settings.SettingsExport.PageHeader.Center =
            string.Format("ΣΥΓΚΕΝΤΡΩΤΙΚΗ ΚΑΤΑΣΤΑΣΗ ΑΝΑΘΕΣΕΩΝ ΣΕ {0} ΗΜΕΡ.ΑΠΟΣΤΟΛΗΣ: {1}",
                contractor, DateTime.Now.ToString());
    }

    settings.SettingsExport.PageFooter.Center = " Ημερομηνία: " + DateTime.Now.ToString();

    settings.SettingsExport.BeforeExport = (sender, e) =>
    {
        var gridView = sender as MVCxGridView;
        if (gridView == null) return;

        gridView.Columns["ID1022"].ExportWidth = 40;

        gridView.Columns["SectorId"].Visible = false;
        gridView.Columns["DepartmentId"].Visible = false;
        gridView.Columns["BackEndTabletId"].Visible = false;
        gridView.Columns["TaskTypeId"].Visible = false;
        gridView.Columns["AssignmentId"].Visible = false;
        gridView.Columns["BCC_ErgolaviaNeasParoxis"].Visible = false;

        gridView.Columns["Perioxi"].ExportWidth = 80;
        gridView.Columns["Municipality"].ExportWidth = 80;
        gridView.Columns["Street_Name"].ExportWidth = 100;
        gridView.Columns["Odos2"].ExportWidth = 80;
        gridView.Columns["Street_Number"].ExportWidth = 20;
        gridView.Columns["Task_Description"].ExportWidth = 100;
        gridView.Columns["State"].ExportWidth = 70;
        gridView.Columns["DateOfAssignment"].ExportWidth = 80;
        gridView.Columns["ErgName"].ExportWidth = 80;
        gridView.Columns["DateOfCompletion"].ExportWidth = 80;
        gridView.Columns["Remarks"].ExportWidth = 135;
    };

    // 09.03.2018, Andreas Kasapleris, export settings
    settings.SettingsExport.RenderBrick = (sender, e) =>
    {
        if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
            e.BrickStyle.BackColor = System.Drawing.Color.FromArgb(0xEE, 0xEE, 0xEE);
    };

    settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
    settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
    settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
    settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
    settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

    // Hidden Grid Columns
    {
        settings.Columns.Add(m => m.SectorId, column =>
        {
            column.Visible = false;
        });

        settings.Columns.Add(m => m.DepartmentId, column =>
        {
            column.Visible = false;
        });

        settings.Columns.Add(m => m.BackEndTabletId, column =>
        {
            column.Visible = false;
        });

        settings.Columns.Add(m => m.TaskTypeId, column =>
        {
            column.Visible = false;
        });

        settings.Columns.Add(m => m.AssignmentId, column =>
        {
            column.Visible = false;
        });

        settings.Columns.Add(m => m.BCC_ErgolaviaNeasParoxis, column =>
        {
            column.Visible = false;
        });
    }

    // Visible Grid Columns
    {
        settings.Columns.Add(m => m.ID1022);
        settings.Columns.Add(m => m.Perioxi);
        settings.Columns.Add(m => m.Municipality);
        settings.Columns.Add(m => m.Street_Name);
        settings.Columns.Add(m => m.Odos2);
        settings.Columns.Add(m => m.Street_Number);
        settings.Columns.Add(m => m.Task_Description);
        settings.Columns.Add(m => m.State);

        settings.Columns.Add(m => m.DateOfAssignment, column =>
        {
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
        });

        settings.Columns.Add(m => m.ErgName);

        settings.Columns.Add(m => m.DateOfCompletion, column =>
        {
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
        });

        settings.Columns.Add(m => m.Remarks);
    }

    settings.ClientSideEvents.Init = @"
        function(s,e) {
            window.GlobalGridView_Init(s, e);
            window.GlobalGridView_AdjustSize(s);
        }";

    settings.ClientSideEvents.EndCallback = "window.GlobalGridView_AdjustSize";

}).SetEditErrorText(ViewBag.EditError).Bind(Model).GetHtml())